{
  "name": "cyber-girlfriend",
  "version": "0.0.1",
  "description": "AI Voice Companion - Cyber Girlfriend",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && bun run dev",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && bun run build",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:frontend": "cd frontend && npm run preview",
    "start:backend": "cd backend && bun run start",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npm run format",
    "format:backend": "cd backend && npm run format",
    "test": "npm run test:frontend",
    "test:frontend": "cd frontend && npm run test",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && bun install",
    "clean": "rm -rf frontend/dist backend/dist frontend/node_modules backend/node_modules node_modules",
    "db:migrate": "cd backend && bun run db:migrate",
    "db:studio": "cd backend && bun run db:studio",
    "setup": "cp .env.example .env && npm run install:all"
  },
  "keywords": [
    "ai",
    "voice",
    "companion",
    "chat",
    "react",
    "typescript",
    "bun",
    "hono"
  ],
  "author": "Cyber Girlfriend Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "bun": ">=1.0.0"
  }
}